Original Implementation (with numba):

Overall time:  4.697901725769043
Init Ttme:  0.1405649185180664
Cholesky time:  3.2208359241485596
Delete time:  0.0033731460571289062
Cholesky solve time:  0.3776969909667969
Dict total Time:  3.7424709796905518


Current Implementation:

Overall time:  5.252352952957153
Init Ttme:  0.14977574348449707
Cholesky time:  0.7772407531738281
Delete time:  0.00421595573425293
Cholesky solve time:  1.8274097442626953
Dict total Time:  2.7586421966552734


# @numba.jit(nopython=True)
def choldeleteindexesff(U, indexes, L):

    indexes = sorted(indexes, reverse=True)

    for index in indexes:

        s23 = U[index, index + 1:]

        shape = (U.shape[0] - 1, U.shape[1] - 1)

        L[:, :] = 0.0
        L[0:index, 0:index] = U[0:index, 0:index]
        L[index:shape[0], 0:index] = U[index + 1:, 0:index]
        L[0:index, index:shape[1]] = U[0:index, index + 1:]
        L[index:shape[0], index:shape[1]] = U[index + 1:, index + 1:]

        shape = (U.shape[0] - 1, U.shape[1] - 1)

        L2 = np.zeros(shape=shape)

        L2[0:index, 0:index] = U[0:index, 0:index]
        L2[index:, 0:index] = U[index + 1:, 0:index]
        L2[0:index, index:] = U[0:index, index + 1:]
        L2[index:, index:] = U[index + 1:, index + 1:]

        print()
        print(len(s23))
        print(shape)
        print(L.shape)
        print(L2.shape)
        print(L2 - L[0:shape[0], 0:shape[1]])

        if len(s23) > 0:

            U = L[index:shape[0], index:shape[1]]
            U2 = L2[index:, index:]

            print(U.shape)
            print(U2.shape)
            print(U - U2)

            U = L[index:shape[0], index:shape[1]]
            U2 = L2

            print(U.shape)
            print(U2.shape)
            print(U - U2)

        # If the deleted index is at the end of matrix, then we do not need to update the U.

        if len(s23) == 0:
            U = L[0:shape[0], 0:shape[1]]
        else:

            U = L[index:shape[0], index:shape[1]]

            n = s23.size

            for k in range(n - 1):

                Ukk = U[k, k]
                xk = s23[k]
                r = math.sqrt(Ukk ** 2 + xk ** 2)
                c = r / Ukk
                s = xk / Ukk
                U[k, k] = r
                U[k, k + 1:] = (U[k, (k + 1):] + s * s23[k + 1:]) / c
                s23[k + 1:] = c * s23[k + 1:] - s * U[k, k + 1:]

            k = n - 1
            U[k, k] = math.sqrt(U[k, k] ** 2 + s23[k] ** 2)

            U = L[index:shape[0], index:shape[1]]

    return U




49 (1877, 1877) (1926, 1926) 1877
49 (1926, 1926) (1926, 1926) 1877

48 (1877, 1877) (1925, 1925) 1877
48 (1925, 1925) (1925, 1925) 1877

47 (1877, 1877) (1924, 1924) 1877
47 (1924, 1924) (1924, 1924) 1877

46 (1877, 1877) (1923, 1923) 1877
46 (1923, 1923) (1923, 1923) 1877

45 (1877, 1877) (1922, 1922) 1877
45 (1922, 1922) (1922, 1922) 1877

44 (1877, 1877) (1921, 1921) 1877
44 (1921, 1921) (1921, 1921) 1877

43 (1877, 1877) (1920, 1920) 1877
43 (1920, 1920) (1920, 1920) 1877

42 (1877, 1877) (1919, 1919) 1877
42 (1919, 1919) (1919, 1919) 1877

41 (1877, 1877) (1918, 1918) 1877
41 (1918, 1918) (1918, 1918) 1877

40 (1877, 1877) (1917, 1917) 1877
40 (1917, 1917) (1917, 1917) 1877

39 (1877, 1877) (1916, 1916) 1877
39 (1916, 1916) (1916, 1916) 1877

38 (1877, 1877) (1915, 1915) 1877
38 (1915, 1915) (1915, 1915) 1877

37 (1877, 1877) (1914, 1914) 1877
37 (1914, 1914) (1914, 1914) 1877

36 (1877, 1877) (1913, 1913) 1877
36 (1913, 1913) (1913, 1913) 1877

35 (1877, 1877) (1912, 1912) 1877
35 (1912, 1912) (1912, 1912) 1877

16 (1895, 1895) (1911, 1911) 1895
16 (1911, 1911) (1911, 1911) 1895

15 (1895, 1895) (1910, 1910) 1895
15 (1910, 1910) (1910, 1910) 1895

14 (1895, 1895) (1909, 1909) 1895
14 (1909, 1909) (1909, 1909) 1895

13 (1895, 1895) (1908, 1908) 1895
13 (1908, 1908) (1908, 1908) 1895

12 (1895, 1895) (1907, 1907) 1895
12 (1907, 1907) (1907, 1907) 1895

11 (1895, 1895) (1906, 1906) 1895
11 (1906, 1906) (1906, 1906) 1895

10 (1895, 1895) (1905, 1905) 1895
10 (1905, 1905) (1905, 1905) 1895

9 (1895, 1895) (1904, 1904) 1895
9 (1904, 1904) (1904, 1904) 1895

6 (1897, 1897) (1903, 1903) 1897
6 (1903, 1903) (1903, 1903) 1897

5 (1897, 1897) (1902, 1902) 1897
5 (1902, 1902) (1902, 1902) 1897

3 (1898, 1898) (1901, 1901) 1898
3 (1901, 1901) (1901, 1901) 1898
0.0


Overall time:  5.342851161956787
Init Ttme:  0.17584443092346191
Cholesky time:  0.8095018863677979
Delete time:  0.004540443420410156
Cholesky solve time:  1.9266719818115234
Dict total Time:  2.9165587425231934
58 72


Overall time:  6.165503025054932
Init Ttme:  0.16899681091308594
Cholesky time:  4.621349573135376
Delete time:  0.0026535987854003906
Cholesky solve time:  0.379666805267334
Dict total Time:  5.172666788101196
58 72